basePath: /
definitions:
  model.Actor:
    properties:
      date_of_birth:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  model.ActorWithFilms:
    properties:
      actor:
        $ref: '#/definitions/model.Actor'
      films:
        items:
          $ref: '#/definitions/model.Film'
        type: array
    type: object
  model.AuthResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/model.UserResponse'
    type: object
  model.Film:
    properties:
      description:
        type: string
      id:
        type: integer
      list_actors:
        items:
          $ref: '#/definitions/model.Actor'
        type: array
      name:
        type: string
      rating:
        type: number
      release_date:
        type: string
    type: object
  model.SignInRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.SignUpRequest:
    properties:
      password:
        minLength: 8
        type: string
      role:
        type: integer
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  model.UserResponse:
    properties:
      id:
        type: integer
      role:
        type: integer
      username:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for FilmLibrary Application
  title: Film App API
  version: 1.0.0
paths:
  /actor_create:
    post:
      consumes:
      - application/json
      description: Create Actor
      operationId: create-actor
      parameters:
      - description: Create Actor
        in: body
        name: actor
        required: true
        schema:
          $ref: '#/definitions/model.Actor'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Actor'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Actor
      tags:
      - actor
  /actor_delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Actor
      operationId: delete-actor
      parameters:
      - description: Actor ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Actor
      tags:
      - actor
  /actor_update:
    put:
      consumes:
      - application/json
      description: Update Actor
      operationId: update-actor
      parameters:
      - description: Update Actor
        in: body
        name: actor
        required: true
        schema:
          $ref: '#/definitions/model.Actor'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Actor'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Actor
      tags:
      - actor
  /auth/sign_in:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token + user info
      operationId: login
      parameters:
      - description: Account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign_up:
    post:
      consumes:
      - application/json
      description: Create a new user account and return JWT token
      operationId: create-account
      parameters:
      - description: Account info
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: SignUp
      tags:
      - auth
  /film_create:
    post:
      consumes:
      - application/json
      description: Create Film
      operationId: create-film
      parameters:
      - description: Create Film
        in: body
        name: film
        required: true
        schema:
          $ref: '#/definitions/model.Film'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Film'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Film
      tags:
      - film
  /film_delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Film
      operationId: delete-film
      parameters:
      - description: Film ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Film
      tags:
      - film
  /film_update:
    put:
      consumes:
      - application/json
      description: Update Film
      operationId: update-film
      parameters:
      - description: Update Film
        in: body
        name: film
        required: true
        schema:
          $ref: '#/definitions/model.Film'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Film'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Film
      tags:
      - film
  /films/search:
    get:
      consumes:
      - application/json
      description: Search films by actor and/or movie name
      operationId: search-film
      parameters:
      - description: Actor name to search for
        in: query
        name: actor
        type: string
      - description: Movie title to search for
        in: query
        name: movie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Film'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search Film
      tags:
      - film
  /films_get_list:
    get:
      consumes:
      - application/json
      description: Get all films with optional sorting
      operationId: get-all-films
      parameters:
      - description: Sort films by field (optional)
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Film'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Films
      tags:
      - film
  /get_list_actors_films:
    get:
      consumes:
      - application/json
      description: Get list of all actors with their films
      operationId: get-actors-with-films
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ActorWithFilms'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Actors with Their Films
      tags:
      - actor_movie
securityDefinitions:
  ApiKeyAuth: 
    type: http
    scheme: bearer
    bearerFormat: JWT
swagger: "2.0"